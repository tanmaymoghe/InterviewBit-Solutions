STL Binary Search Functions - Work when container is sorted. 

1. binary_search(start_ptr, end_ptr, num) 
This function returns boolean true if the element is present in the container, else returns false.

2. lower_bound(start_ptr, end_ptr, num)
Returns pointer to “position of num” if container contains 1 occurrence of num.
Returns pointer to “first position of num” if container contains multiple occurrence of num.
Returns pointer to “position of next higher number than num” if container does not contain occurrence of num.
Returns pointer to "vector.end()" if num if greater than all elements in the set. Do not do *pointer here as a garbage value will be returned.

3. upper_bound(start_ptr, end_ptr, num) 
Returns pointer to “position of next higher number than num” if container contains 1 occurrence of num.
Returns pointer to "vector.end()" if num is >= maximum element. Do not do *pointer here as a garbage value will be returned.
Returns pointer to “first position of next higher number than last occurrence of num” if container contains multiple occurrence of num.
Returns pointer to “position of next higher number than num” if container does not contain occurrence of num.

For functions 2 and 3, subtract v.begin() from returned pointer to get the actual index.
For iterating, i=v.begin() and i<v.end() and not i<=v.end().
Hence, subtract pointer from v.end() to get remaining elements including the current one.